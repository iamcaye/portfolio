{"version":3,"sources":["img/caye.png","img/caye-hi.png","img/caye-pc.png","views/Home.js","views/Contact.js","views/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","src","Caye","alt","Contact","target","href","GithubRepos","repos","undefined","map","repo","key","id","name","toUpperCase","GithubReposLite","html_url","language","About","React","useState","setRepos","useEffect","abortController","AbortController","signal","fetch","then","response","json","catch","err","console","error","getRepos","abort","Nav","to","NavLite","NavView","setNav","toggleDrawer","open","event","type","Button","onClick","Drawer","anchor","onClose","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","hydrate","StrictMode","basename","hashType","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ceb1c452.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/caye.364ac792.png\";","module.exports = __webpack_public_path__ + \"static/media/caye-hi.b7b7076d.png\";","module.exports = __webpack_public_path__ + \"static/media/caye-pc.22373ede.png\";","import React from 'react'\r\nimport '../App.css'\r\nimport Caye from '../img/caye.png'\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <>\r\n    <div className='container-home'>\r\n      <img src={Caye} alt='caye' className='caye'/>\r\n      <p className='block'>I choose a lazy person to do a hard job. Because a lazy person will find an easy way to do it. (Bill Gates)</p>\r\n      <p></p>\r\n    </div>\r\n    <p className='quote'>\r\n      Hi, I'm Cayetano and this is my portfolio.<br></br>Enjoy it!\r\n    </p>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport '../App.css'\r\nimport Caye from '../img/caye-hi.png'\r\n\r\nexport const Contact = () => {\r\n  return (\r\n    <div className='contactDiv'>\r\n      <img src={Caye} alt='caye' className='caye'/>\r\n      <h1>Contact</h1>\r\n      <a className='iglink' target='noopener' href='https://github.com/iamcaye'>Github : @iamcaye</a>\r\n      <br/>\r\n      <br/>\r\n      <a className='iglink' target='noopener' href='https://www.instagram.com/cayetanobiehler/'>Instagram : @cayetanobiehler</a>\r\n      <br/>\r\n      <br/>\r\n      <a className='iglink' target='noopener' href='mailto:cayetano.biehler@gmail.com'>Gmail : cayetano.biehler@gmail.com</a>\r\n      <br/>\r\n      <br/>\r\n      <a className='iglink' target='noopener' href='https://www.linkedin.com/in/cayetano-biehler-pollaci-0074091b0/'>LinkedIn: Cayetano Biehler</a>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport Caye from '../img/caye-pc.png'\r\n\r\nconst GithubRepos = (repos) => {\r\n  if(repos !== undefined){\r\n    repos = repos['repos'];\r\n    return(\r\n      <table className='GithubTable'>\r\n      <caption className='GithubCaption'>My Github Repos</caption>\r\n      <thead></thead>\r\n      <tbody>\r\n          <tr className='GitHead'>\r\n            <th>\r\n              <p>Name</p>\r\n            </th>\r\n            <th>\r\n              <p>Description</p>\r\n            </th>\r\n            <th>\r\n              <p>Language</p>\r\n            </th>\r\n          </tr>\r\n        {repos.map((repo) =>\r\n          <tr key={repo.id} className='GithubTableRow'>\r\n            <th>\r\n              <a href={repo['html_url']} target='noopener'>{repo.name.toUpperCase()}</a>\r\n            </th>\r\n            <th>\r\n              <p className='GitDesc'>{(repo['description'] == null ? \"-- No description --\" : repo['description'])}</p>\r\n            </th>\r\n            <th>\r\n              <p>{repo['language']}</p>\r\n            </th>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n      <tfoot></tfoot>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nconst GithubReposLite = (repos) => {\r\n  if(repos !== undefined){\r\n    repos = repos['repos'];\r\n    return(\r\n      <div className='gitLiteMain'>\r\n        <h2 className='GithubCaption'>My Github Repos</h2>\r\n        {repos.map((repo) =>\r\n          <div key={repo.id} className='gitContainer'>\r\n            <a href={repo.html_url} target='noopener'>{repo.name.toUpperCase()}</a>\r\n            <p>{(repo['description'] == null ? \"-- No description --\" : repo['description'])}</p>\r\n            <p><b>Language:</b> {repo.language}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const About = () => {\r\n  const [repos, setRepos] = React.useState([]);\r\n  \r\n  const getRepos = (signal) => {\r\n    let url = 'https://api.github.com/users/iamcaye/repos';\r\n    fetch(url, {signal : signal})\r\n      .then(response => response.json())\r\n      .then(response =>{\r\n        //console.log(response);\r\n        setRepos(response);\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n    getRepos(signal);\r\n    return function cleanup(){\r\n      abortController.abort();\r\n    }\r\n  \r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <div className='container'>\r\n      <img src={Caye} alt='caye' className='caye'/>\r\n      <span>\r\n        <h1>About me</h1>\r\n        <p className='quote'>\r\n          Currently studying Electronic Engineering (4rd year) in MÃ¡laga<br></br> and self-taught software developer.\r\n        </p>\r\n      </span>\r\n    </div>\r\n    <div className='container'>\r\n      <span>\r\n        <h2>Electronics</h2>\r\n        <ul>\r\n          <li>\r\n\t\t\t\t\t<p>Advanced level on circuit analysis & design</p>\r\n          </li>\r\n          <li>\r\n            <p>Advanced knowledge on the TIVA MSP430G2ET microcontroller and its library</p>\r\n          </li>\r\n          <li>\r\n            <p>Advanced knowledge on the TIVA TM4C123G microcontroller and its library</p>\r\n          </li>\r\n          <li>\r\n            <p>Medium level VHDL programming</p>\r\n          </li>\r\n        </ul>\r\n      </span>\r\n      <span>\r\n        <h2>Coding</h2>\r\n        <ul>\r\n          <li>\r\n            <p>Advanced level C programming, used for communication between processes and multi-processing</p>\r\n          </li>\r\n          <li>\r\n            <p>C++11 programming (OOP)</p>\r\n          </li>\r\n          <li>\r\n            <p>Self-taught Python programming (OOP, Django and a little bit of deep learning...)</p>\r\n          </li>\r\n          <li>\r\n            <p>Self-taught Javascript porgramming, currently learning ReactJS for Web Development</p>\r\n          </li>\r\n        </ul>\r\n      </span>\r\n    </div>\r\n    <div className='container'>\r\n    <GithubRepos repos={repos}/>\r\n    <GithubReposLite repos={repos}/>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport './App.css';\r\nimport {HashRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport {Home} from './views/Home';\r\nimport {Contact} from './views/Contact';\r\nimport {About} from './views/About';\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className='nav-main'>\r\n      <p className='nav-title'>Cayetano Biehler</p>\r\n      <Link className='nav-link' to='/'>Home</Link>\r\n      <Link className='nav-link' to='about'>About</Link>\r\n      <Link className='nav-link' to='contact'>Contact</Link>\r\n      <a className='nav-link-last' href='https://iamcaye.github.io/blog/' target=\"noopener\">Blog</a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst NavLite = () => {\r\n\tconst [NavView, setNav] = React.useState(false);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setNav(open);\r\n  };\r\n\r\n  return (\r\n    <div className='nav-main-lite'>\r\n    <p>Cayetano Biehler</p>\r\n    <Button onClick={toggleDrawer(true)}>MENU</Button>\r\n    <Drawer anchor={'top'} open={NavView} onClose={toggleDrawer(false)}>\r\n      <p>Cayetano Biehler</p>\r\n      <Link onClick={toggleDrawer(false)} className='first-nav-link-l' to='/'>Home</Link>\r\n      <Link onClick={toggleDrawer(false)} className='nav-link-l' to='about'>About</Link>\r\n      <Link onClick={toggleDrawer(false)} className='nav-link-l' to='contact'>Contact</Link>\r\n      <a onClick={toggleDrawer(false)} className='nav-link-l' target=\"noopener\" href='https://iamcaye.github.io/blog/'>Blog</a>\r\n    </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Nav />\r\n      <NavLite />\r\n      <div>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Home />\r\n          </Route>\r\n          <Route path='/about'>\r\n            <About />\r\n          </Route>\r\n          <Route path='/contact'>\r\n            <Contact />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.hydrate(\r\n  <React.StrictMode>\r\n    <HashRouter\r\n\t\t\tbasename={\"/\"}\r\n\t\t\thashType={\"slash\"}\r\n\t\t>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}